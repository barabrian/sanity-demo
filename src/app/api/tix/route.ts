import { NextResponse } from 'next/server'

// Generated by https://quicktype.io

export interface Tix {
  ExternalReferenceNumber: string
  EventGroupId: number
  Name: string
  SubTitle: string
  Description: string
  Organisation: Organisation
  HeadingTextOnline: HeadingTextOnline
  NoteTextOnline: string
  ImageCacheKey: number
  EventImagePath: string
  FeaturedImagePath: string
  PosterImagePath: string
  ExternalUrl: string
  IsFilm: boolean
  PurchaseUrls: PurchaseURL[]
  Translations: TixTranslation[]
  Dates: DateElement[]
}

export interface DateElement {
  EventId: number
  DefaultEventGroupId: number
  Name: string
  Title: string
  SubTitle: SubTitle
  Organisation: Organisation
  Season: Season
  MinTicketsOnline: number
  MaxTicketsOnline: number
  SpecialNote: string
  StartDate: string
  StartDateUTCUnix: number
  EndDate: string
  EndDateUTCUnix: number
  WaitingList: boolean
  IsFreeEvent: boolean
  OnlineSaleStart: string
  OnlineSaleStartUTCUnix: number
  OnlineSaleEnd: string
  OnlineSaleEndUTCUnix: number
  Venue: Organisation
  Hall: Organisation
  Promoter: string
  SoldOut: boolean
  Duration: DateDuration
  SaleStatus: number
  SaleStatusText: SaleStatusText
  Capacity: number
  Remaining: number
  Categories: string
  CategoryTranslations: { [key: string]: CategoryTranslation[] }
  Tags: Tags
  Translations: DateTranslation[]
  PurchaseUrls: PurchaseURL[]
  ProductPurchaseUrls: PurchaseURL[]
  Products: Product[]
  MinPrice: number
  MaxPrice: number
  Prices: DatePrice[]
  Benefits: any[]
  OnlineReservationAllowed: boolean
}

export interface CategoryTranslation {
  LanguageName: string
  Culture: CategoryTranslationCulture
  TwoLetterCulture: CategoryTranslationTwoLetterCulture
  Name: string
  TixDefault: boolean
}

export enum CategoryTranslationCulture {
  DaDK = 'da-DK',
  Empty = '',
  EnGB = 'en-GB',
  NbNO = 'nb-NO',
  SvSE = 'sv-SE',
}

export enum CategoryTranslationTwoLetterCulture {
  Da = 'da',
  Empty = '',
  En = 'en',
  Nb = 'nb',
  Sv = 'sv',
}

export enum DateDuration {
  CA2Klst20MinHlé = 'Ca. 2klst - 20min hlé.',
  CA5060MínOgEkkiHlé = 'ca 50-60 mín og ekki hlé ',
  Dagskrá90MínOgSvoHléSamtalsRúmlega2Klst = 'Dagskrá 90 mín og svo hlé - samtals rúmlega 2 klst. ',
  Empty = '',
  The15Klst = '1,5 klst',
  The161730MeðHlé = '16-17:30 með hlé',
  The2TímarMeðHlé = '2 tímar með hlé',
  The45Mín = '45 mín',
  The90MínHlé = '90 mín + hlé',
}

export enum Organisation {
  Eldborg = 'Eldborg',
  Harpa = 'Harpa',
  Hörpuhorn = 'Hörpuhorn',
  K2 = 'K2',
  Kaldalón = 'Kaldalón',
  Norðurljós = 'Norðurljós',
  Silfurberg = 'Silfurberg',
}

export interface DatePrice {
  TicketType: PriceTicketType
  Quota: null
  Sold: number
  Reserved: number
  Remaining: null
  QuantityRule: QuantityRule
  ActiveFrom: null
  ActiveFromUTCUnix: number
  ActiveTo: null
  ActiveToUTCUnix: number
  Translations: PurchaseURL[]
  Prices: PricePrice[]
}

export interface PricePrice {
  PriceZone: PriceZone
  PriceZoneID: number
  Price: number
}

export enum PriceZone {
  A = 'A',
  B = 'B',
  C = 'C',
  D = 'D',
  E = 'E',
  PriceZoneA = 'A+',
  X = 'X',
}

export enum QuantityRule {
  Empty = '',
  The048121620 = '0,4,8,12,16,20',
}

export enum PriceTicketType {
  Almennt = 'Almennt',
  Börn = 'Börn',
  Börn12ÁraOgYngri = 'Börn 12 ára og yngri',
  Ellilífeyrisþegar = 'Ellilífeyrisþegar',
  FjölskyldumiðiGildirFyrir4 = 'Fjölskyldumiði gildir fyrir 4',
  Forsala = 'Forsala',
  ForsalaHönnuðirOgArkitektarMHA = 'Forsala - Hönnuðir og arkitektar MHA',
  FélagarÍFestu = 'Félagar í Festu',
  Nemandi = 'Nemandi',
  Nemendaafsláttur25ÁraOgYngri = 'Nemendaafsláttur 25 ára og yngri',
  Nemendur = 'Nemendur',
  The617Ára = '6-17 ára',
  Öryrkjar = 'Öryrkjar',
}

export interface PurchaseURL {
  LanguageName: LanguageName
  Culture: PurchaseURLCulture
  TwoLetterCulture: PurchaseURLTwoLetterCulture
  TicketType?: PurchaseURLTicketType
  Link?: string
}

export enum PurchaseURLCulture {
  EnGB = 'en-GB',
  IsIS = 'is-IS',
}

export enum LanguageName {
  English = 'English',
  Íslenska = 'Íslenska',
}

export enum PurchaseURLTicketType {
  Child = 'Child',
  Disabled = 'Disabled',
  FamilyTicketFor4 = 'Family ticket for 4 ',
  General = 'General',
  Senior = 'Senior',
  The617Year = '6-17 year',
}

export enum PurchaseURLTwoLetterCulture {
  En = 'en',
  Is = 'is',
}

export interface Product {
  ProductId: number
  Name: string
  Description: string
  GroupingText: GroupingText
  Categories: string
  Price: number
  ProductImagePath: string
  Translations: any[]
}

export enum GroupingText {
  ViltuStyrkjaBandið = 'Viltu styrkja bandið?',
}

export enum SaleStatusText {
  FewTickets = 'FewTickets',
  NoStatus = 'NoStatus',
  SoldOut = 'SoldOut',
}

export enum Season {
  Harpa2023 = 'Harpa 2023',
  Harpa2024 = 'Harpa 2024',
  SinfóníuhljómsveitÍslands202324 = 'Sinfóníuhljómsveit íslands 2023-24',
}

export enum SubTitle {
  Empty = '',
  SinfóníuhjómsveitÍslands = 'Sinfóníuhjómsveit Íslands',
  SinfóníuhljómsveitÍslands = 'Sinfóníuhljómsveit Íslands',
  Uppselt = 'Uppselt',
  ÖrfáSætiLaus = 'Örfá sæti laus',
}

export enum Tags {
  Empty = '',
  MyrkirMúsíkdagar = 'Myrkir Músíkdagar',
  SinfóníuhljómsveitÍslands = 'Sinfóníuhljómsveit Íslands',
  SígildirSunnudagar = 'Sígildir sunnudagar',
  Áramóta = 'áramóta',
}

export interface DateTranslation {
  LanguageName: LanguageName
  Culture: CategoryTranslationCulture
  TwoLetterCulture: CategoryTranslationTwoLetterCulture
  Name: string
  Duration: TranslationDuration
  VenueName: string
  HallName: string
}

export enum TranslationDuration {
  Eldborg = 'Eldborg',
  Empty = '',
}

export enum HeadingTextOnline {
  Empty = '',
  ForföllCancellation = 'Forföll/Cancellation',
  OpiðAllanDaginn = 'Opið allan daginn',
}

export interface TixTranslation {
  LanguageName: LanguageName
  Culture: CategoryTranslationCulture
  TwoLetterCulture: CategoryTranslationTwoLetterCulture
  Name: string
  SubTitle: string
  Description: string
}

export async function GET() {
  // Get the exchange rates from the Bluelagoon API.
  const tixResponse = await fetch(
    'https://eventapi.tix.is/v2/Events/29820cf7b51b097a/'
  )
  const exchangeRates = (await tixResponse.json()) as Tix

  return NextResponse.json(exchangeRates)
}
